{"name":"Pwntools","tagline":"CTF framework used by Gallopsled in every CTF","body":"# pwntools - CTF toolkit\r\n[![Docs latest](https://readthedocs.org/projects/pwntools/badge/)](https://pwntools.readthedocs.org/en/latest)\r\n[![Docs 2.2.0](https://readthedocs.org/projects/pwntools/badge/?version=2.2.0)](https://pwntools.readthedocs.org/en/2.2.0)\r\n[![PyPI](https://img.shields.io/pypi/v/pwntools.svg?style=flat)](https://pypi.python.org/pypi/pwntools/)\r\n[![Gittip](https://img.shields.io/gittip/gallopsled.svg?style=flat)](https://www.gittip.com/gallopsled/)\r\n[![Travis](https://travis-ci.org/Gallopsled/pwntools.svg)](https://travis-ci.org/Gallopsled/pwntools)\r\n[![Twitter](https://img.shields.io/badge/twitter-Gallopsled-4099FF.svg?style=flat)](https://twitter.com/Gallopsled)\r\n\r\nThis is the CTF framework used by Gallopsled in every CTF.\r\n\r\n```python\r\nfrom pwn import *\r\ncontext(arch = 'i386', os = 'linux')\r\n\r\nr = remote('exploitme.example.com', 31337)\r\n# EXPLOIT CODE GOES HERE\r\nr.send(asm(shellcraft.sh()))\r\nr.interactive()\r\n```\r\n\r\nHowever we have made command-line frontends for some of the functionality\r\nin `pwnlib`. These are:\r\n\r\n* `asm`/`disasm`: Small wrapper for various assemblers.\r\n* `constgrep`: Tool for finding constants defined in header files.\r\n* `cyclic`: De Bruijn sequence generator and lookup tool.\r\n* `hex`/`unhex`: Command line tools for doing common hexing/unhexing operations.\r\n* `shellcraft`: Frontend to our shellcode.\r\n* `phd`: Replacement for `hexdump` with colors.\r\n\r\n# Documentation\r\nOur documentation is available at [pwntools.readthedocs.org](https://pwntools.readthedocs.org/en/latest/)\r\n\r\nTo get you started, we've provided some example solutions for past CTF challenges in our [write-ups repository](https://github.com/Gallopsled/pwntools-write-ups).\r\n\r\n# Installation\r\n\r\npwntools is best supported on Ubuntu 12.04 and 14.04, but most functionality should work on any Posix-like distribution (Debian, Arch, FreeBSD, OSX, etc.).\r\n\r\nMost of the functionality of pwntools is self-contained and Python-only.  You should be able to get running quickly with\r\n\r\n```sh\r\npip install pwntools\r\n```\r\n\r\nHowever, some of the features (ROP generation and assembling/disassembling foreign architectures) require non-Python dependencies.  For more information, see the [complete installation instructions here](https://pwntools.readthedocs.org/en/latest/install.html).\r\n\r\n\r\n# Contribution\r\n\r\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\r\n\r\n# Contact\r\nIf you have any questions not worthy of a [bug report](https://github.com/Gallopsled/pwntools/issues), feel free to join us\r\nat [`#gallopsled` on Freenode](irc://irc.freenode.net/gallopsled) and ask away.\r\nClick [here](https://kiwiirc.com/client/irc.freenode.net/gallopsled) to connect.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}